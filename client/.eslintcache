[{"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\index.js":"1","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\pages\\newsnip.js":"2","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\pages\\Home.js":"3","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\utils\\UserContext.js":"4","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\codemodalglobal.js":"5","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\TopNav\\TopNav.js":"6","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\Signup\\Signup.js":"7","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\FooterPage.js":"8","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\Login\\index.js":"9","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\posts.js":"10"},{"size":498,"mtime":1606095192931,"results":"11","hashOfConfig":"12"},{"size":700,"mtime":1606275484396,"results":"13","hashOfConfig":"12"},{"size":5866,"mtime":1606931492008,"results":"14","hashOfConfig":"12"},{"size":274,"mtime":1606095192940,"results":"15","hashOfConfig":"12"},{"size":10807,"mtime":1606882934348,"results":"16","hashOfConfig":"12"},{"size":2096,"mtime":1606755709056,"results":"17","hashOfConfig":"12"},{"size":9013,"mtime":1606595802023,"results":"18","hashOfConfig":"12"},{"size":2454,"mtime":1606884249186,"results":"19","hashOfConfig":"12"},{"size":32,"mtime":1606095192922,"results":"20","hashOfConfig":"12"},{"size":1182,"mtime":1606929415596,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"f0fwmg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\index.js",[],["46","47"],"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\pages\\newsnip.js",["48","49","50"],"import React, {useContext} from 'react'\nimport {Jumbotron} from 'reactstrap'\nimport Editor from '../components/Editor'\nimport FooterPage from '../components/FooterPage'\nimport LogInBro from '../components/loginbro'\nimport UserContext from '../utils/UserContext'\n\n\nfunction NewSnip(){\n\n    const { user, loggedIn, logout } = useContext(UserContext);\n    return(<>{loggedIn ? (<>\n    {/* giant ace editor goes here */}\n    <Jumbotron style={{opacity:\"0.8\"}}>\n        <Editor />\n        {/* code title goes here */}\n        {/* code type input goes here */}\n        {/* keywords input goes here */}\n        {/* savecode */}\n    </Jumbotron>\n    </>):(<LogInBro/>)}</>\n    )\n\n}\n    export default NewSnip","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\pages\\Home.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73"],"import React, { useState, useContext, useEffect} from 'react';\nimport UserContext from '../utils/UserContext'\nimport LogInBro from '../components/loginbro'\nimport AceModalGlobal from '../components/codemodalglobal';\nimport Posts from '../components/posts'\nimport { Container, Row, Col, Jumbotron, Form, Button, FormGroup, Label, Input, InputGroup, InputGroupText, InputGroupAddon, CustomInput } from 'reactstrap';\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons'\nimport { faHatWizard } from '@fortawesome/free-solid-svg-icons'\nimport { faHamburger } from '@fortawesome/free-solid-svg-icons'\nimport { faGhost } from '@fortawesome/free-solid-svg-icons'\nimport { faCouch } from '@fortawesome/free-solid-svg-icons'\nimport { faDrumstickBite } from '@fortawesome/free-solid-svg-icons'\nimport { faDove } from '@fortawesome/free-solid-svg-icons'\nimport { faBomb } from '@fortawesome/free-solid-svg-icons'\nimport { faAppleAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUserInjured } from '@fortawesome/free-solid-svg-icons'\nimport { faUserNinja } from '@fortawesome/free-solid-svg-icons'\nimport { faDog } from '@fortawesome/free-solid-svg-icons'\nimport { faHippo } from '@fortawesome/free-solid-svg-icons'\nimport { faBreadSlice } from '@fortawesome/free-solid-svg-icons'\nimport { faCat } from '@fortawesome/free-solid-svg-icons'\nimport { faBug } from '@fortawesome/free-solid-svg-icons'\nimport { faPoo } from '@fortawesome/free-solid-svg-icons'\nimport { faFrog } from '@fortawesome/free-solid-svg-icons'\nimport { faUserTie } from '@fortawesome/free-solid-svg-icons'\nimport FooterPage from '../components/FooterPage'\nimport Login from '../components/Login/Login'\nimport Axios from 'axios';\n\nconst Home = () => {\n  const { user, loggedIn, logout } = useContext(UserContext);\n  const [globalInputState, setGlobalInputState] = useState({language:\"html\", keywords:\"\"});\n  const [snipList, setSnipList] = useState([]);\n  const [feedList, setFeedList] = useState([]);\n\n  const postsexample = [{ name: \"example 1\", author: \"Bob\", language: \"Html\", snip: \"<p>Hello World</p>\", avatar: faCat, note: \"Quality Stuff\" }, { name: \"example 2\", author: \"Tim\", language: \"Html\", snip: \"<p>Good night moon</p>\", avatar: faDog, note: \"Some Good Code Here\" }]\n\n  function handleGlobalInput(event) {\n    const { name, value } = event.target;\n    setGlobalInputState({...globalInputState, [name]: value})\n    console.log(globalInputState)\n  }\n\n  const globalSearchCode = () => {Axios.get(\"/api/codes/findall\").then(data=> {\n    console.log(data.data)\n    let results = data.data\n    let arr = []\n    results.forEach(item=> {\n      if(item.public === true && item.keywords.includes(globalInputState.keywords) && item.scriptType.toUpperCase() === globalInputState.language.toUpperCase()){\n        arr.push(item)\n      }\n    })\n    setSnipList(arr)\n  })}\n\n  function feedFill(user) {Axios.get(\"/api/codes/findall\").then(data=> {\n    console.log(data.data)\n    let results = data.data\n    let feedArr = []\n    results.forEach(item=> {\n      if(item.public === true && user.following.includes(item.userId) ){\n        feedArr.push(item)\n      }\n    })\n    setFeedList(feedArr)\n  })}\n\n  useEffect(() => {\n    if(user !== null){\n    feedFill(user);\n    }\n  }\n  ,[user, loggedIn]\n  )\n\n\n  \n\n  return (<>\n    {loggedIn ? (<>\n      <Container>\n        <Row>\n          <Col sm={12} md={4}>\n            <Jumbotron style={{ marginTop: \"1rem\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", textAlign: \"center\", opacity: \"0.7\", paddingTop: \"1rem\" }}>\n              <h4 className=\"mb-4\">Global Code Search</h4>\n              <FormGroup>\n                <CustomInput type=\"select\" id=\"exampleCustomSelect\" onChange={handleGlobalInput} name=\"language\" >\n                  <option value=\"\">Select</option>\n                  <option>JavaScript</option>\n                  <option>HTML</option>\n                  <option>CSS</option>\n                  <option>Mark Down</option>\n                  <option>Handlebars</option>\n                </CustomInput>\n              </FormGroup>\n              <br />\n              <InputGroup size=\"sm\" className=\"mb-3\" onChange={handleGlobalInput}>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText id=\"Keywords\"></InputGroupText>\n                </InputGroupAddon>\n                <Input name=\"keywords\" aria-label=\"Small\" aria-describedby=\"Keywords\" placeholder=\"KeyWords\" />\n              </InputGroup>\n              <Button color=\"primary\" onClick={globalSearchCode}>Search</Button>\n              <br />\n            {snipList.map(item => <><AceModalGlobal name={item.title} snip={item.snip} sniptwo={item.snipTwo} snipthree={item.snipThree} language={item.scriptType} languagetwo={item.scriptTypeTwo} languagethree={item.scriptTypeThree} keywords={item.keywords} comments={item.comments} Public={item.public} updated={item.updated} userId={item.userId} _id={item._id}/><br /></>)}\n            </Jumbotron>\n          </Col>\n          <Col sm={12} md={8}>\n            <Jumbotron style={{ marginTop: \"1rem\", opacity: \"0.7\", paddingTop: \"1rem\" }}>\n              <h2 className=\"mb-4\" style={{ textAlign: \"center\" }}>News Feed:</h2>\n              {feedList.map((item) => <><Posts avatar= {faHamburger} author={item.author} name={item.title} title={item.title} snip={item.snip} sniptwo={item.snipTwo} snipthree={item.snipThree} language={item.scriptType} languagetwo={item.scriptTypeTwo} languagethree={item.scriptTypeThree} keywords={item.keywords} comments={item.comments} Public={item.public} updated={item.updated} userId={item.userId} _id={item._id} /></>)}\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container>\n\n\n    </>\n    ) : (\n        <Login />\n      )}\n\n  </>\n  )\n}\nexport default Home;\n","C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\utils\\UserContext.js",[],["74","75"],"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\codemodalglobal.js",["76","77","78","79","80","81","82","83","84","85"],"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\TopNav\\TopNav.js",["86"],"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\Signup\\Signup.js",["87","88","89","90","91"],"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\FooterPage.js",["92"],"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\Login\\index.js",[],"C:\\Users\\phili\\Desktop\\QuikCodePro\\client\\src\\components\\posts.js",["93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":11,"column":13,"nodeType":"100","messageId":"101","endLine":11,"endColumn":17},{"ruleId":"98","severity":1,"message":"103","line":11,"column":29,"nodeType":"100","messageId":"101","endLine":11,"endColumn":35},{"ruleId":"98","severity":1,"message":"104","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":16},{"ruleId":"98","severity":1,"message":"105","line":6,"column":42,"nodeType":"100","messageId":"101","endLine":6,"endColumn":46},{"ruleId":"98","severity":1,"message":"106","line":6,"column":67,"nodeType":"100","messageId":"101","endLine":6,"endColumn":72},{"ruleId":"98","severity":1,"message":"107","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":16},{"ruleId":"98","severity":1,"message":"108","line":8,"column":10,"nodeType":"100","messageId":"101","endLine":8,"endColumn":20},{"ruleId":"98","severity":1,"message":"109","line":9,"column":10,"nodeType":"100","messageId":"101","endLine":9,"endColumn":21},{"ruleId":"98","severity":1,"message":"110","line":11,"column":10,"nodeType":"100","messageId":"101","endLine":11,"endColumn":17},{"ruleId":"98","severity":1,"message":"111","line":12,"column":10,"nodeType":"100","messageId":"101","endLine":12,"endColumn":17},{"ruleId":"98","severity":1,"message":"112","line":13,"column":10,"nodeType":"100","messageId":"101","endLine":13,"endColumn":25},{"ruleId":"98","severity":1,"message":"113","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":16},{"ruleId":"98","severity":1,"message":"114","line":15,"column":10,"nodeType":"100","messageId":"101","endLine":15,"endColumn":16},{"ruleId":"98","severity":1,"message":"115","line":16,"column":10,"nodeType":"100","messageId":"101","endLine":16,"endColumn":20},{"ruleId":"98","severity":1,"message":"116","line":17,"column":10,"nodeType":"100","messageId":"101","endLine":17,"endColumn":23},{"ruleId":"98","severity":1,"message":"117","line":18,"column":10,"nodeType":"100","messageId":"101","endLine":18,"endColumn":21},{"ruleId":"98","severity":1,"message":"118","line":20,"column":10,"nodeType":"100","messageId":"101","endLine":20,"endColumn":17},{"ruleId":"98","severity":1,"message":"119","line":21,"column":10,"nodeType":"100","messageId":"101","endLine":21,"endColumn":22},{"ruleId":"98","severity":1,"message":"120","line":23,"column":10,"nodeType":"100","messageId":"101","endLine":23,"endColumn":15},{"ruleId":"98","severity":1,"message":"121","line":24,"column":10,"nodeType":"100","messageId":"101","endLine":24,"endColumn":15},{"ruleId":"98","severity":1,"message":"122","line":25,"column":10,"nodeType":"100","messageId":"101","endLine":25,"endColumn":16},{"ruleId":"98","severity":1,"message":"123","line":26,"column":10,"nodeType":"100","messageId":"101","endLine":26,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":27,"column":8,"nodeType":"100","messageId":"101","endLine":27,"endColumn":18},{"ruleId":"98","severity":1,"message":"103","line":32,"column":27,"nodeType":"100","messageId":"101","endLine":32,"endColumn":33},{"ruleId":"98","severity":1,"message":"124","line":37,"column":9,"nodeType":"100","messageId":"101","endLine":37,"endColumn":21},{"ruleId":"94","replacedBy":"125"},{"ruleId":"96","replacedBy":"126"},{"ruleId":"98","severity":1,"message":"127","line":1,"column":35,"nodeType":"100","messageId":"101","endLine":1,"endColumn":44},{"ruleId":"98","severity":1,"message":"105","line":8,"column":3,"nodeType":"100","messageId":"101","endLine":8,"endColumn":7},{"ruleId":"98","severity":1,"message":"128","line":9,"column":3,"nodeType":"100","messageId":"101","endLine":9,"endColumn":12},{"ruleId":"98","severity":1,"message":"129","line":16,"column":8,"nodeType":"100","messageId":"101","endLine":16,"endColumn":13},{"ruleId":"98","severity":1,"message":"130","line":25,"column":10,"nodeType":"100","messageId":"101","endLine":25,"endColumn":12},{"ruleId":"98","severity":1,"message":"131","line":30,"column":17,"nodeType":"100","messageId":"101","endLine":30,"endColumn":25},{"ruleId":"98","severity":1,"message":"103","line":30,"column":27,"nodeType":"100","messageId":"101","endLine":30,"endColumn":33},{"ruleId":"98","severity":1,"message":"132","line":75,"column":10,"nodeType":"100","messageId":"101","endLine":75,"endColumn":17},{"ruleId":"98","severity":1,"message":"133","line":96,"column":23,"nodeType":"100","messageId":"101","endLine":96,"endColumn":37},{"ruleId":"98","severity":1,"message":"134","line":97,"column":25,"nodeType":"100","messageId":"101","endLine":97,"endColumn":41},{"ruleId":"135","severity":1,"message":"136","line":29,"column":31,"nodeType":"137","endLine":29,"endColumn":98},{"ruleId":"98","severity":1,"message":"106","line":6,"column":3,"nodeType":"100","messageId":"101","endLine":6,"endColumn":8},{"ruleId":"98","severity":1,"message":"138","line":8,"column":3,"nodeType":"100","messageId":"101","endLine":8,"endColumn":11},{"ruleId":"98","severity":1,"message":"139","line":10,"column":3,"nodeType":"100","messageId":"101","endLine":10,"endColumn":12},{"ruleId":"98","severity":1,"message":"140","line":10,"column":14,"nodeType":"100","messageId":"101","endLine":10,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":36,"column":6,"nodeType":"143","endLine":36,"endColumn":8,"suggestions":"144"},{"ruleId":"98","severity":1,"message":"145","line":2,"column":31,"nodeType":"100","messageId":"101","endLine":2,"endColumn":39},{"ruleId":"98","severity":1,"message":"146","line":2,"column":25,"nodeType":"100","messageId":"101","endLine":2,"endColumn":33},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'FooterPage' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'logout' is assigned a value but never used.","'LogInBro' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'faUser' is defined but never used.","'faSeedling' is defined but never used.","'faHatWizard' is defined but never used.","'faGhost' is defined but never used.","'faCouch' is defined but never used.","'faDrumstickBite' is defined but never used.","'faDove' is defined but never used.","'faBomb' is defined but never used.","'faAppleAlt' is defined but never used.","'faUserInjured' is defined but never used.","'faUserNinja' is defined but never used.","'faHippo' is defined but never used.","'faBreadSlice' is defined but never used.","'faBug' is defined but never used.","'faPoo' is defined but never used.","'faFrog' is defined but never used.","'faUserTie' is defined but never used.","'postsexample' is assigned a value but never used.",["147"],["148"],"'useEffect' is defined but never used.","'FormGroup' is defined but never used.","'brace' is defined but never used.","'id' is defined but never used.","'loggedIn' is assigned a value but never used.","'privacy' is assigned a value but never used.","'setLanguageTwo' is assigned a value but never used.","'setLanguageThree' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormText' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'errorMessage'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'Collapse' is defined but never used.","'CardText' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [errorMessage]",{"range":"152","text":"153"},[1240,1242],"[errorMessage]"]