[{"C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\index.js":"1","C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\pages\\Home.js":"2","C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\utils\\codeAPI.js":"3","C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\utils\\UserContext.js":"4","C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\components\\Signup\\Signup.js":"5","C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\components\\codemodalglobal.js":"6","C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\pages\\newsnip.js":"7","C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\components\\FooterPage.js":"8"},{"size":498,"mtime":1606181191559,"results":"9","hashOfConfig":"10"},{"size":5070,"mtime":1606593825572,"results":"11","hashOfConfig":"10"},{"size":669,"mtime":1606585276311,"results":"12","hashOfConfig":"10"},{"size":274,"mtime":1606181191563,"results":"13","hashOfConfig":"10"},{"size":8993,"mtime":1606590107670,"results":"14","hashOfConfig":"10"},{"size":2763,"mtime":1606590730737,"results":"15","hashOfConfig":"10"},{"size":700,"mtime":1606275487104,"results":"16","hashOfConfig":"10"},{"size":2180,"mtime":1606275487101,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8abd5q",{"filePath":"21","messages":"22","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\index.js",[],["37","38"],"C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\pages\\Home.js",["39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\utils\\codeAPI.js",["62"],"C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\utils\\UserContext.js",[],["63","64"],"C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\components\\Signup\\Signup.js",["65","66","67","68","69"],"import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Alert, Card, CustomInput, CardBody,\n  CardTitle, CardSubtitle\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../utils/UserContext';\nimport './signup.css'\nimport AvatarOption from '../avatarOp'\n\nconst Signup = () => {\n  const Avatars = [  \"Plant\",\"Frog\", \"Wizard\",\"Burger\",\"Guitar\",\"Ghost\",\"Couch\",\"Drumstick\",\"Bird\",\"Bomb\",\"Apple\",\"Injured Person\",\"Ninja\",\"Person\",\"Tie Person\",\"Hippo\",\"Dog\",\"Home Slice\",\"Cat\"]\n  const {\n    userData,\n    handleInputChange,\n    handleSignup,\n    failureMessage,\n  } = useContext(UserContext);\n  const [validFirstName, setValidFirstName] = useState(false);\n  const [validLastName, setValidLastName] = useState(false);\n  const [validEmail, setValidEmail] = useState(false);\n  const [validUserName, setValidUserName] = useState(false);\n  const [validPassword, setValidPassword] = useState(false);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState({});\n\n  useEffect(() => {\n    console.log(errorMessage);\n  }, []);\n\n  const handleConfirmPassword = (event) => {\n    const { value } = event.target;\n    setConfirmPassword(value);\n  };\n\n  // make sure firstname is at least 3 characters\n  const checkFirstname = () => {\n    const length = userData.firstname.length;\n    if (length === 0) {\n      setValidFirstName(false);\n      setErrorMessage({ ...errorMessage, firstname: '' });\n    } else if (length < 3) {\n      setValidFirstName(false);\n      setErrorMessage({\n        ...errorMessage,\n        firstname: 'First Name should be at least 3 characters.',\n      });\n    } else {\n      setValidFirstName(true);\n      setErrorMessage({ ...errorMessage, firstname: '' });\n    }\n  };\n\n  // make sure firstname is at least 3 characters\n  const checkLastname = () => {\n    const length = userData.lastname.length;\n    if (length === 0) {\n      setValidLastName(false);\n      setErrorMessage({ ...errorMessage, lastname: '' });\n    } else if (length < 3) {\n      setValidLastName(false);\n      setErrorMessage({\n        ...errorMessage,\n        lastname: 'Last Name should be at least 3 characters.',\n      });\n    } else {\n      setValidLastName(true);\n      setErrorMessage({ ...errorMessage, lastname: '' });\n    }\n  };\n\n  // uses regex to check is email is valid\n  const checkEmail = () => {\n    const validEmail = new RegExp(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    );\n    const valid = validEmail.test(userData.email);\n    const length = userData.email.length;\n    if (length === 0) {\n      setValidEmail(false);\n      setErrorMessage({ ...errorMessage, email: '' });\n    } else if (!valid) {\n      setValidEmail(false);\n      setErrorMessage({\n        ...errorMessage,\n        email: 'Please enter a valid email address.',\n      });\n    } else {\n      setValidEmail(true);\n      setErrorMessage({ ...errorMessage, email: '' });\n    }\n  };\n\n  // make sure username is at least 5 characters\n  const checkUsername = () => {\n    const length = userData.username.length;\n    if (length === 0) {\n      setValidUserName(false);\n      setErrorMessage({ ...errorMessage, username: '' });\n    } else if (length < 5) {\n      setValidUserName(false);\n      setErrorMessage({\n        ...errorMessage,\n        username: 'Username should be at least 5 characters.',\n      });\n    } else {\n      setValidUserName(true);\n      setErrorMessage({ ...errorMessage, username: '' });\n    }\n  };\n\n  // checks is password meets regex test (at least 8 letters, 1 capital and 1 number)\n  const checkPassword = () => {\n    const strongPassword = new RegExp(\n      /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n    );\n    const valid = strongPassword.test(userData.password);\n    const length = userData.password.length;\n    if (length === 0) {\n      setValidPassword(false);\n      setErrorMessage({ ...errorMessage, password: '' });\n    } else if (!valid) {\n      setValidPassword(false);\n      setErrorMessage({\n        ...errorMessage,\n        password: 'Password should be at least 8 letters, 1 capital & 1 number',\n      });\n    } else {\n      setValidPassword(true);\n      setErrorMessage({ ...errorMessage, password: '' });\n    }\n  };\n\n  // checks if 2 password fields match\n  const checkConfirmPassword = () => {\n    if (confirmPassword.length === 0) {\n      setIsConfirmed(false);\n      setErrorMessage({ ...errorMessage, confirmPassword: '' });\n    } else if (\n      userData.password !== '' &&\n      userData.password === confirmPassword\n    ) {\n      setIsConfirmed(true);\n      setErrorMessage({ ...errorMessage, confirmPassword: '' });\n    } else {\n      setIsConfirmed(false);\n      setErrorMessage({\n        ...errorMessage,\n        confirmPassword: 'Passwords must match',\n      });\n    }\n  };\n\n  return (\n    <div style={{display:\"flex\", flexDirection:\"column\", alignItems: \"left\", justifyContent: \"left\", marginTop: \"10%\",opacity:\"0.8\"}}> <Card\n        bg=\"secondary\"\n        text='white'\n        style={{ width: '30rem' }}\n        className=\"mb-2 bg-secondary\"\n      >\n       \n        <CardBody>\n\n        <h2 className=\"loginTitle text-white\">Sign Up</h2>\n      {failureMessage ? <Alert type=\"danger\">{failureMessage}</Alert> : <p></p>}\n      <Form>\n        <FormGroup>\n          \n          <Input\n            type=\"text\"\n            name=\"firstname\"\n            id=\"firstname\"\n            placeholder=\"first name\"\n            value={userData.firstname}\n            onChange={handleInputChange}\n            onBlur={checkFirstname}\n            valid={validFirstName}\n          />\n          <div className=\"errorStyle\">{errorMessage['firstname']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"text\"\n            id=\"lastname\"\n            name=\"lastname\"\n            placeholder=\"last name\"\n            value={userData.lastname}\n            onChange={handleInputChange}\n            onBlur={checkLastname}\n            valid={validLastName}\n          />\n          <div className=\"errorStyle\">{errorMessage['lastname']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"email@email.com\"\n            value={userData.email}\n            onChange={handleInputChange}\n            onBlur={checkEmail}\n            valid={validEmail}\n          />\n          <div className=\"errorStyle\">{errorMessage['email']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"username\"\n            value={userData.username}\n            onChange={handleInputChange}\n            onBlur={checkUsername}\n            valid={validUserName}\n          />\n          <div className=\"errorStyle\">{errorMessage['username']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            value={userData.password}\n            onChange={handleInputChange}\n            onBlur={checkPassword}\n            valid={validPassword}\n          />\n          <div className=\"errorStyle\">{errorMessage['password']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"confirmPassword\"\n            placeholder=\"confirm password\"\n            value={confirmPassword}\n            onChange={handleConfirmPassword}\n            onKeyUp={checkConfirmPassword}\n            valid={isConfirmed}\n          />\n          <div className=\"errorStyle\">{errorMessage['confirmPassword']}</div>\n        </FormGroup>\n        <FormGroup>\n                \n              <CustomInput size=\"sm\" type=\"select\" name=\"avatar\" onChange={handleInputChange}>\n            <option>Choose an Avatar</option>\n  {Avatars.map(item =><AvatarOption name={item}>{item}</AvatarOption>)}\n            </CustomInput>\n            </FormGroup>\n        {/* if all fields are valid, allow the user to submit the form */}\n        {validFirstName &&\n        validLastName &&\n        validEmail &&\n        validUserName &&\n        validPassword &&\n        isConfirmed ? (\n          <Button onClick={handleSignup} color=\"success\" block>\n            Sign Up\n          </Button>\n        ) : (\n          <Button className = \"text-white\" onClick={handleSignup} color=\"primary\" block disabled>\n            Sign Up\n          </Button>\n        )}\n        <p className=\"signupLink text-white\">\n          <Link className=\"text-white\" to=\"/login\">Already have an account? Log in here</Link>\n        </p>\n      </Form>\n      </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\components\\codemodalglobal.js",["70","71","72","73","74"],"C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\pages\\newsnip.js",["75","76","77"],"C:\\Users\\cathe\\Documents\\QuikCodePro\\client\\src\\components\\FooterPage.js",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":16},{"ruleId":"83","severity":1,"message":"87","line":6,"column":42,"nodeType":"85","messageId":"86","endLine":6,"endColumn":46},{"ruleId":"83","severity":1,"message":"88","line":7,"column":10,"nodeType":"85","messageId":"86","endLine":7,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":20},{"ruleId":"83","severity":1,"message":"90","line":9,"column":10,"nodeType":"85","messageId":"86","endLine":9,"endColumn":21},{"ruleId":"83","severity":1,"message":"91","line":10,"column":10,"nodeType":"85","messageId":"86","endLine":10,"endColumn":21},{"ruleId":"83","severity":1,"message":"92","line":11,"column":10,"nodeType":"85","messageId":"86","endLine":11,"endColumn":17},{"ruleId":"83","severity":1,"message":"93","line":12,"column":10,"nodeType":"85","messageId":"86","endLine":12,"endColumn":17},{"ruleId":"83","severity":1,"message":"94","line":13,"column":10,"nodeType":"85","messageId":"86","endLine":13,"endColumn":25},{"ruleId":"83","severity":1,"message":"95","line":14,"column":10,"nodeType":"85","messageId":"86","endLine":14,"endColumn":16},{"ruleId":"83","severity":1,"message":"96","line":15,"column":10,"nodeType":"85","messageId":"86","endLine":15,"endColumn":16},{"ruleId":"83","severity":1,"message":"97","line":16,"column":10,"nodeType":"85","messageId":"86","endLine":16,"endColumn":20},{"ruleId":"83","severity":1,"message":"98","line":17,"column":10,"nodeType":"85","messageId":"86","endLine":17,"endColumn":23},{"ruleId":"83","severity":1,"message":"99","line":18,"column":10,"nodeType":"85","messageId":"86","endLine":18,"endColumn":21},{"ruleId":"83","severity":1,"message":"100","line":20,"column":10,"nodeType":"85","messageId":"86","endLine":20,"endColumn":17},{"ruleId":"83","severity":1,"message":"101","line":21,"column":10,"nodeType":"85","messageId":"86","endLine":21,"endColumn":22},{"ruleId":"83","severity":1,"message":"102","line":23,"column":10,"nodeType":"85","messageId":"86","endLine":23,"endColumn":15},{"ruleId":"83","severity":1,"message":"103","line":24,"column":10,"nodeType":"85","messageId":"86","endLine":24,"endColumn":15},{"ruleId":"83","severity":1,"message":"104","line":25,"column":10,"nodeType":"85","messageId":"86","endLine":25,"endColumn":16},{"ruleId":"83","severity":1,"message":"105","line":26,"column":10,"nodeType":"85","messageId":"86","endLine":26,"endColumn":19},{"ruleId":"83","severity":1,"message":"106","line":27,"column":8,"nodeType":"85","messageId":"86","endLine":27,"endColumn":18},{"ruleId":"83","severity":1,"message":"107","line":32,"column":11,"nodeType":"85","messageId":"86","endLine":32,"endColumn":15},{"ruleId":"83","severity":1,"message":"108","line":32,"column":27,"nodeType":"85","messageId":"86","endLine":32,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":3,"column":1,"nodeType":"111","endLine":25,"endColumn":3},{"ruleId":"79","replacedBy":"112"},{"ruleId":"81","replacedBy":"113"},{"ruleId":"83","severity":1,"message":"114","line":6,"column":3,"nodeType":"85","messageId":"86","endLine":6,"endColumn":8},{"ruleId":"83","severity":1,"message":"115","line":8,"column":3,"nodeType":"85","messageId":"86","endLine":8,"endColumn":11},{"ruleId":"83","severity":1,"message":"116","line":10,"column":3,"nodeType":"85","messageId":"86","endLine":10,"endColumn":12},{"ruleId":"83","severity":1,"message":"117","line":10,"column":14,"nodeType":"85","messageId":"86","endLine":10,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":36,"column":6,"nodeType":"120","endLine":36,"endColumn":8,"suggestions":"121"},{"ruleId":"83","severity":1,"message":"122","line":2,"column":41,"nodeType":"85","messageId":"86","endLine":2,"endColumn":51},{"ruleId":"83","severity":1,"message":"123","line":7,"column":8,"nodeType":"85","messageId":"86","endLine":7,"endColumn":13},{"ruleId":"83","severity":1,"message":"124","line":14,"column":8,"nodeType":"85","messageId":"86","endLine":14,"endColumn":9},{"ruleId":"83","severity":1,"message":"125","line":24,"column":20,"nodeType":"85","messageId":"86","endLine":24,"endColumn":31},{"ruleId":"83","severity":1,"message":"126","line":30,"column":12,"nodeType":"85","messageId":"86","endLine":30,"endColumn":27},{"ruleId":"83","severity":1,"message":"106","line":4,"column":8,"nodeType":"85","messageId":"86","endLine":4,"endColumn":18},{"ruleId":"83","severity":1,"message":"107","line":11,"column":13,"nodeType":"85","messageId":"86","endLine":11,"endColumn":17},{"ruleId":"83","severity":1,"message":"108","line":11,"column":29,"nodeType":"85","messageId":"86","endLine":11,"endColumn":35},{"ruleId":"83","severity":1,"message":"127","line":2,"column":31,"nodeType":"85","messageId":"86","endLine":2,"endColumn":39},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'LogInBro' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'faUser' is defined but never used.","'faSeedling' is defined but never used.","'faHatWizard' is defined but never used.","'faHamburger' is defined but never used.","'faGhost' is defined but never used.","'faCouch' is defined but never used.","'faDrumstickBite' is defined but never used.","'faDove' is defined but never used.","'faBomb' is defined but never used.","'faAppleAlt' is defined but never used.","'faUserInjured' is defined but never used.","'faUserNinja' is defined but never used.","'faHippo' is defined but never used.","'faBreadSlice' is defined but never used.","'faBug' is defined but never used.","'faPoo' is defined but never used.","'faFrog' is defined but never used.","'faUserTie' is defined but never used.","'FooterPage' is defined but never used.","'user' is assigned a value but never used.","'logout' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["128"],["129"],"'Label' is defined but never used.","'FormText' is defined but never used.","'CardTitle' is defined but never used.","'CardSubtitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'errorMessage'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'CardHeader' is defined but never used.","'brace' is defined but never used.","'$' is defined but never used.","'setLanguage' is assigned a value but never used.","'handleSnipInput' is defined but never used.","'Collapse' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [errorMessage]",{"range":"133","text":"134"},[1240,1242],"[errorMessage]"]