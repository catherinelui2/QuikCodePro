[{"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\index.js":"1","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\NoMatch.js":"2","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\Home.js":"3","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\utils\\API.js":"4","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\components\\TopNav\\index.js":"5","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\Profile\\Profile.js":"6","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\components\\Signup\\Signup.js":"7","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\newsnip.js":"8","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\components\\FooterPage.js":"9","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\Auth\\index.js":"10","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\utils\\UserContext.js":"11","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\App.js":"12","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\utils\\codeAPI.js":"13"},{"size":498,"mtime":1606276124092,"results":"14","hashOfConfig":"15"},{"size":108,"mtime":1606276124100,"results":"16","hashOfConfig":"15"},{"size":3821,"mtime":1606276124098,"results":"17","hashOfConfig":"15"},{"size":404,"mtime":1606276124112,"results":"18","hashOfConfig":"15"},{"size":33,"mtime":1606276124076,"results":"19","hashOfConfig":"15"},{"size":8886,"mtime":1606327007062,"results":"20","hashOfConfig":"15"},{"size":9000,"mtime":1606276124067,"results":"21","hashOfConfig":"15"},{"size":700,"mtime":1606276124106,"results":"22","hashOfConfig":"15"},{"size":2180,"mtime":1606276124060,"results":"23","hashOfConfig":"15"},{"size":31,"mtime":1606276124097,"results":"24","hashOfConfig":"15"},{"size":274,"mtime":1606276124114,"results":"25","hashOfConfig":"15"},{"size":4581,"mtime":1606326014209,"results":"26","hashOfConfig":"15"},{"size":612,"mtime":1606276124116,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"nnphww",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\index.js",[],["59","60"],"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\NoMatch.js",[],"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\Home.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"import React, { useState, useContext } from 'react';\nimport UserContext from '../utils/UserContext'\nimport LogInBro from '../components/loginbro'\nimport AceModalGlobal from '../components/codemodalglobal'\nimport Posts from '../components/posts'\nimport { Container, Row, Col, Jumbotron, Form, Button, FormGroup, Label, CustomInput } from 'reactstrap';\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { faSeedling } from '@fortawesome/free-solid-svg-icons'\nimport { faHatWizard } from '@fortawesome/free-solid-svg-icons'\nimport { faHamburger } from '@fortawesome/free-solid-svg-icons'\nimport { faGhost } from '@fortawesome/free-solid-svg-icons'\nimport { faCouch } from '@fortawesome/free-solid-svg-icons'\nimport { faDrumstickBite } from '@fortawesome/free-solid-svg-icons'\nimport { faDove } from '@fortawesome/free-solid-svg-icons'\nimport { faBomb } from '@fortawesome/free-solid-svg-icons'\nimport { faAppleAlt } from '@fortawesome/free-solid-svg-icons'\nimport { faUserInjured } from '@fortawesome/free-solid-svg-icons'\nimport { faUserNinja } from '@fortawesome/free-solid-svg-icons'\nimport { faDog } from '@fortawesome/free-solid-svg-icons'\nimport { faHippo } from '@fortawesome/free-solid-svg-icons'\nimport { faBreadSlice } from '@fortawesome/free-solid-svg-icons'\nimport { faCat } from '@fortawesome/free-solid-svg-icons'\nimport { faBug } from '@fortawesome/free-solid-svg-icons'\nimport { faPoo } from '@fortawesome/free-solid-svg-icons'\nimport { faFrog } from '@fortawesome/free-solid-svg-icons'\nimport { faUserTie } from '@fortawesome/free-solid-svg-icons'\nimport FooterPage from '../components/FooterPage'\nimport Login from '../components/Login/Login'\n\nconst Home = () => {\n  const { user, loggedIn, logout } = useContext(UserContext);\n  \n\n  const globalexample = [{ name: \"example 1\", author: \"Bob\", language: \"Html\", snip: \"<p>Hello World</p>\", note: \"Quality Stuff\" }]\n\n  const postsexample = [{ name: \"example 1\", author: \"Bob\", language: \"Html\", snip: \"<p>Hello World</p>\", avatar: faCat, note: \"Quality Stuff\" }, { name: \"example 2\", author: \"Tim\", language: \"Html\", snip: \"<p>Good night moon</p>\", avatar: faDog, note: \"Some Good Code Here\" }]\n\n  return (<>\n    {loggedIn ? (<>\n      <Container>\n        <Row>\n          <Col sm={12} md={4}>\n            <Jumbotron style={{ marginTop: \"10%\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\", textAlign: \"center\", opacity: \"0.7\" }}>\n              <h4>Global Code Search</h4>\n              <FormGroup>\n                <Label for=\"exampleCustomSelect\">Select a Language</Label>\n                <CustomInput type=\"select\" id=\"exampleCustomSelect\" name=\"customSelect\" >\n                  <option value=\"\">Select</option>\n                  <option>JavaScript</option>\n                  <option>HTML</option>\n                  <option>CSS</option>\n                  <option>Mark Down</option>\n                  <option>Handlebars</option>\n                </CustomInput>\n              </FormGroup>\n              <br />\n              <Button color=\"primary\">Search</Button>\n              <br />\n              {globalexample.map(item => <><AceModalGlobal name={item.name} snip={item.snip} author={item.author} language={item.language} note={item.note} /><br /></>)}\n            </Jumbotron>\n          </Col>\n          <Col sm={12} md={8}>\n            <Jumbotron style={{ marginTop: \"5%\", opacity: \"0.7\" }}>\n              <h2 style={{ textAlign: \"center\" }}>News Feed:</h2>\n              {postsexample.map((item) => <><Posts name={item.name} snip={item.snip} author={item.author} language={item.language} avatar={item.avatar} note={item.note} /><br /></>)}\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container>\n\n\n    </>\n    ) : (\n        <Login />\n      )}\n\n  </>\n  )\n}\nexport default Home;\n","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\utils\\API.js",["85"],"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\components\\TopNav\\index.js",[],"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\Profile\\Profile.js",["86","87","88","89","90","91","92","93","94","95","96","97","98"],"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\components\\Signup\\Signup.js",["99","100","101","102"],"import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Alert, Card, CustomInput, CardBody,\n  CardTitle, CardSubtitle\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../utils/UserContext';\nimport './signup.css'\nimport AvatarOption from '../avatarOp'\n\nconst Signup = () => {\n  const Avatars = [  \"Plant\",\"Frog\", \"Wizard\",\"Burger\",\"Guitar\",\"Ghost\",\"Couch\",\"Drumstick\",\"Bird\",\"Bomb\",\"Apple\",\"Injured Person\",\"Ninja\",\"Person\",\"Tie Person\",\"Hippo\",\"Dog\",\"Home Slice\",\"Cat\"]\n  const {\n    userData,\n    handleInputChange,\n    handleSignup,\n    failureMessage,\n  } = useContext(UserContext);\n  const [validFirstName, setValidFirstName] = useState(false);\n  const [validLastName, setValidLastName] = useState(false);\n  const [validEmail, setValidEmail] = useState(false);\n  const [validUserName, setValidUserName] = useState(false);\n  const [validPassword, setValidPassword] = useState(false);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState({});\n\n  useEffect(() => {\n    console.log(errorMessage);\n  }, []);\n\n  const handleConfirmPassword = (event) => {\n    const { value } = event.target;\n    setConfirmPassword(value);\n  };\n\n  // make sure firstname is at least 3 characters\n  const checkFirstname = () => {\n    const length = userData.firstname.length;\n    if (length === 0) {\n      setValidFirstName(false);\n      setErrorMessage({ ...errorMessage, firstname: '' });\n    } else if (length < 3) {\n      setValidFirstName(false);\n      setErrorMessage({\n        ...errorMessage,\n        firstname: 'First Name should be at least 3 characters.',\n      });\n    } else {\n      setValidFirstName(true);\n      setErrorMessage({ ...errorMessage, firstname: '' });\n    }\n  };\n\n  // make sure firstname is at least 3 characters\n  const checkLastname = () => {\n    const length = userData.lastname.length;\n    if (length === 0) {\n      setValidLastName(false);\n      setErrorMessage({ ...errorMessage, lastname: '' });\n    } else if (length < 3) {\n      setValidLastName(false);\n      setErrorMessage({\n        ...errorMessage,\n        lastname: 'Last Name should be at least 3 characters.',\n      });\n    } else {\n      setValidLastName(true);\n      setErrorMessage({ ...errorMessage, lastname: '' });\n    }\n  };\n\n  // uses regex to check is email is valid\n  const checkEmail = () => {\n    const validEmail = new RegExp(\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    );\n    const valid = validEmail.test(userData.email);\n    const length = userData.email.length;\n    if (length === 0) {\n      setValidEmail(false);\n      setErrorMessage({ ...errorMessage, email: '' });\n    } else if (!valid) {\n      setValidEmail(false);\n      setErrorMessage({\n        ...errorMessage,\n        email: 'Please enter a valid email address.',\n      });\n    } else {\n      setValidEmail(true);\n      setErrorMessage({ ...errorMessage, email: '' });\n    }\n  };\n\n  // make sure username is at least 5 characters\n  const checkUsername = () => {\n    const length = userData.username.length;\n    if (length === 0) {\n      setValidUserName(false);\n      setErrorMessage({ ...errorMessage, username: '' });\n    } else if (length < 5) {\n      setValidUserName(false);\n      setErrorMessage({\n        ...errorMessage,\n        username: 'Username should be at least 5 characters.',\n      });\n    } else {\n      setValidUserName(true);\n      setErrorMessage({ ...errorMessage, username: '' });\n    }\n  };\n\n  // checks is password meets regex test (at least 8 letters, 1 capital and 1 number)\n  const checkPassword = () => {\n    const strongPassword = new RegExp(\n      /(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/,\n    );\n    const valid = strongPassword.test(userData.password);\n    const length = userData.password.length;\n    if (length === 0) {\n      setValidPassword(false);\n      setErrorMessage({ ...errorMessage, password: '' });\n    } else if (!valid) {\n      setValidPassword(false);\n      setErrorMessage({\n        ...errorMessage,\n        password: 'Password should be at least 8 letters, 1 capital & 1 number',\n      });\n    } else {\n      setValidPassword(true);\n      setErrorMessage({ ...errorMessage, password: '' });\n    }\n  };\n\n  // checks if 2 password fields match\n  const checkConfirmPassword = () => {\n    if (confirmPassword.length === 0) {\n      setIsConfirmed(false);\n      setErrorMessage({ ...errorMessage, confirmPassword: '' });\n    } else if (\n      userData.password !== '' &&\n      userData.password === confirmPassword\n    ) {\n      setIsConfirmed(true);\n      setErrorMessage({ ...errorMessage, confirmPassword: '' });\n    } else {\n      setIsConfirmed(false);\n      setErrorMessage({\n        ...errorMessage,\n        confirmPassword: 'Passwords must match',\n      });\n    }\n  };\n\n  return (\n    <div style={{display:\"flex\", flexDirection:\"column\", alignItems: \"center\", justifyContent: \"center\", marginTop: \"10%\",opacity:\"0.8\"}}> <Card\n        bg=\"secondary\"\n        text='white'\n        style={{ width: '30rem' }}\n        className=\"mb-2 bg-secondary\"\n      >\n       \n        <CardBody>\n\n        <CardTitle className= \"text-white\">Sign up</CardTitle>\n      {failureMessage ? <Alert type=\"danger\">{failureMessage}</Alert> : <p></p>}\n      <Form>\n        <FormGroup>\n          \n          <Input\n            type=\"text\"\n            name=\"firstname\"\n            id=\"firstname\"\n            placeholder=\"first name\"\n            value={userData.firstname}\n            onChange={handleInputChange}\n            onBlur={checkFirstname}\n            valid={validFirstName}\n          />\n          <div className=\"errorStyle\">{errorMessage['firstname']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"text\"\n            id=\"lastname\"\n            name=\"lastname\"\n            placeholder=\"last name\"\n            value={userData.lastname}\n            onChange={handleInputChange}\n            onBlur={checkLastname}\n            valid={validLastName}\n          />\n          <div className=\"errorStyle\">{errorMessage['lastname']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"email@email.com\"\n            value={userData.email}\n            onChange={handleInputChange}\n            onBlur={checkEmail}\n            valid={validEmail}\n          />\n          <div className=\"errorStyle\">{errorMessage['email']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"username\"\n            value={userData.username}\n            onChange={handleInputChange}\n            onBlur={checkUsername}\n            valid={validUserName}\n          />\n          <div className=\"errorStyle\">{errorMessage['username']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            value={userData.password}\n            onChange={handleInputChange}\n            onBlur={checkPassword}\n            valid={validPassword}\n          />\n          <div className=\"errorStyle\">{errorMessage['password']}</div>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            id=\"confirmPassword\"\n            placeholder=\"confirm password\"\n            value={confirmPassword}\n            onChange={handleConfirmPassword}\n            onKeyUp={checkConfirmPassword}\n            valid={isConfirmed}\n          />\n          <div className=\"errorStyle\">{errorMessage['confirmPassword']}</div>\n        </FormGroup>\n        <FormGroup>\n                \n              <CustomInput size=\"sm\" type=\"select\" name=\"avatar\" onChange={handleInputChange}>\n            <option>Choose an Avatar</option>\n  {Avatars.map(item =><AvatarOption name={item}>{item}</AvatarOption>)}\n            </CustomInput>\n            </FormGroup>\n        {/* if all fields are valid, allow the user to submit the form */}\n        {validFirstName &&\n        validLastName &&\n        validEmail &&\n        validUserName &&\n        validPassword &&\n        isConfirmed ? (\n          <Button onClick={handleSignup} color=\"success\" block>\n            Signup\n          </Button>\n        ) : (\n          <Button className = \"text-white\" onClick={handleSignup} color=\"primary\" block disabled>\n            Signup\n          </Button>\n        )}\n        <p className=\"signupLink text-white\">\n          <Link className=\"text-white\" to=\"/login\">already have an account? Sign in here</Link>\n        </p>\n      </Form>\n      </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\newsnip.js",["103","104","105"],"import React, {useContext} from 'react'\nimport {Jumbotron} from 'reactstrap'\nimport Editor from '../components/Editor'\nimport FooterPage from '../components/FooterPage'\nimport LogInBro from '../components/loginbro'\nimport UserContext from '../utils/UserContext'\n\n\nfunction NewSnip(){\n\n    const { user, loggedIn, logout } = useContext(UserContext);\n    return(<>{loggedIn ? (<>\n    {/* giant ace editor goes here */}\n    <Jumbotron style={{opacity:\"0.8\"}}>\n        <Editor />\n        {/* code title goes here */}\n        {/* code type input goes here */}\n        {/* keywords input goes here */}\n        {/* savecode */}\n    </Jumbotron>\n    </>):(<LogInBro/>)}</>\n    )\n\n}\n    export default NewSnip","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\components\\FooterPage.js",["106"],"import React, { useState } from 'react'\nimport { Button, Navbar, Nav, Collapse, NavbarText }  from 'reactstrap';\n\n\nfunction FooterPage(){\n\nconst quotes = [\n  \"This is the code you’re looking for.\",\n  \"Give a man a program, and you’ll frustrate him for a day. Teach a man to program, and you frustrate him for life.\",\n  \"A misspelled variable will make your day terrible.\",\n  \"A machine learning algorithm would jump off a cliff if everyone else was doing it.\",\n  \"A few hours of trial and error can save precious minutes of looking at the README.\",\n  \"If you don’t have time to do it right, you’ll make time to do it twice.\",\n  \"Sometimes, the best debugger is a good night’s sleep.\",\n  \"The best part of being a dev is the ability to work anywhere, anytime. The worst part of being a dev is also the ability to work anywhere, anytime.\",\n  \"Debugger? I hardly know her!\",\n  \"Yes, I’m asking if you’re a robot. I, too, am a robot.\",\n  \"You're closer to becoming a millionaire than Jeff Bezos. Congrats!\",\n  \"Your snippets are safe with us.\",\n  \"It’s not a bug – it’s an undocumented feature.\",\n  \"0110001001101111011011110110001001110011\",\n  \"Documentation? We don’t need no stinking documentation!\",\n  \"Things aren’t always #000000 and #FFFFFF\",\n  \"If at first you don’t succeed; call it version 1.0\",\n  \"Mitch, if you're reading this, give John a raise.\",\n  \"Hi Class! It's me, Zoo Loop from Activity 18, Week 3. Never forget your roots. Giraffe.\",\n];\n\nvar randomNumber = Math.floor(Math.random() * quotes.length);\nvar newQuote = quotes[randomNumber];\nconst [Joke, setJoke] = useState(newQuote)\nfunction setJokeFunction() {\n  randomNumber = Math.floor(Math.random() * quotes.length);\n  newQuote = quotes[randomNumber];\n  setJoke(newQuote);\n}\n    return(\n  <Navbar fixed=\"bottom\" dark color=\"dark\">\n    <NavbarText>QuikCode Say:<div></div>\"<em>{Joke}</em>\"</NavbarText>\n    <div className = \"justify-content-end\">\n        <Nav>\n        <Button color=\"primary\" onClick={setJokeFunction} className=\"mr-4\">Hit Me Again</Button>\n      <NavbarText>© {new Date().getFullYear()}</NavbarText>\n      </Nav>\n    </div>\n  </Navbar>)\n}\nexport default FooterPage;","C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\pages\\Auth\\index.js",[],"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\utils\\UserContext.js",[],"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\App.js",["107","108","109","110"],"C:\\Users\\paule\\Desktop\\directory\\homework\\QuikCodePro\\client\\src\\utils\\codeAPI.js",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"120","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":16},{"ruleId":"116","severity":1,"message":"121","line":6,"column":42,"nodeType":"118","messageId":"119","endLine":6,"endColumn":46},{"ruleId":"116","severity":1,"message":"122","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":16},{"ruleId":"116","severity":1,"message":"123","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":20},{"ruleId":"116","severity":1,"message":"124","line":9,"column":10,"nodeType":"118","messageId":"119","endLine":9,"endColumn":21},{"ruleId":"116","severity":1,"message":"125","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":21},{"ruleId":"116","severity":1,"message":"126","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":17},{"ruleId":"116","severity":1,"message":"127","line":12,"column":10,"nodeType":"118","messageId":"119","endLine":12,"endColumn":17},{"ruleId":"116","severity":1,"message":"128","line":13,"column":10,"nodeType":"118","messageId":"119","endLine":13,"endColumn":25},{"ruleId":"116","severity":1,"message":"129","line":14,"column":10,"nodeType":"118","messageId":"119","endLine":14,"endColumn":16},{"ruleId":"116","severity":1,"message":"130","line":15,"column":10,"nodeType":"118","messageId":"119","endLine":15,"endColumn":16},{"ruleId":"116","severity":1,"message":"131","line":16,"column":10,"nodeType":"118","messageId":"119","endLine":16,"endColumn":20},{"ruleId":"116","severity":1,"message":"132","line":17,"column":10,"nodeType":"118","messageId":"119","endLine":17,"endColumn":23},{"ruleId":"116","severity":1,"message":"133","line":18,"column":10,"nodeType":"118","messageId":"119","endLine":18,"endColumn":21},{"ruleId":"116","severity":1,"message":"134","line":20,"column":10,"nodeType":"118","messageId":"119","endLine":20,"endColumn":17},{"ruleId":"116","severity":1,"message":"135","line":21,"column":10,"nodeType":"118","messageId":"119","endLine":21,"endColumn":22},{"ruleId":"116","severity":1,"message":"136","line":23,"column":10,"nodeType":"118","messageId":"119","endLine":23,"endColumn":15},{"ruleId":"116","severity":1,"message":"137","line":24,"column":10,"nodeType":"118","messageId":"119","endLine":24,"endColumn":15},{"ruleId":"116","severity":1,"message":"138","line":25,"column":10,"nodeType":"118","messageId":"119","endLine":25,"endColumn":16},{"ruleId":"116","severity":1,"message":"139","line":26,"column":10,"nodeType":"118","messageId":"119","endLine":26,"endColumn":19},{"ruleId":"116","severity":1,"message":"140","line":27,"column":8,"nodeType":"118","messageId":"119","endLine":27,"endColumn":18},{"ruleId":"116","severity":1,"message":"141","line":31,"column":11,"nodeType":"118","messageId":"119","endLine":31,"endColumn":15},{"ruleId":"116","severity":1,"message":"142","line":31,"column":27,"nodeType":"118","messageId":"119","endLine":31,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":3,"column":1,"nodeType":"145","endLine":20,"endColumn":3},{"ruleId":"116","severity":1,"message":"121","line":3,"column":50,"nodeType":"118","messageId":"119","endLine":3,"endColumn":54},{"ruleId":"116","severity":1,"message":"146","line":3,"column":101,"nodeType":"118","messageId":"119","endLine":3,"endColumn":109},{"ruleId":"116","severity":1,"message":"147","line":3,"column":111,"nodeType":"118","messageId":"119","endLine":3,"endColumn":125},{"ruleId":"116","severity":1,"message":"148","line":3,"column":127,"nodeType":"118","messageId":"119","endLine":3,"endColumn":139},{"ruleId":"116","severity":1,"message":"149","line":3,"column":141,"nodeType":"118","messageId":"119","endLine":3,"endColumn":153},{"ruleId":"116","severity":1,"message":"150","line":3,"column":162,"nodeType":"118","messageId":"119","endLine":3,"endColumn":167},{"ruleId":"116","severity":1,"message":"151","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":14},{"ruleId":"116","severity":1,"message":"140","line":29,"column":8,"nodeType":"118","messageId":"119","endLine":29,"endColumn":18},{"ruleId":"116","severity":1,"message":"152","line":128,"column":7,"nodeType":"118","messageId":"119","endLine":128,"endColumn":13},{"ruleId":"116","severity":1,"message":"153","line":134,"column":10,"nodeType":"118","messageId":"119","endLine":134,"endColumn":21},{"ruleId":"116","severity":1,"message":"154","line":156,"column":10,"nodeType":"118","messageId":"119","endLine":156,"endColumn":18},{"ruleId":"116","severity":1,"message":"155","line":156,"column":20,"nodeType":"118","messageId":"119","endLine":156,"endColumn":31},{"ruleId":"116","severity":1,"message":"142","line":193,"column":27,"nodeType":"118","messageId":"119","endLine":193,"endColumn":33},{"ruleId":"116","severity":1,"message":"150","line":6,"column":3,"nodeType":"118","messageId":"119","endLine":6,"endColumn":8},{"ruleId":"116","severity":1,"message":"156","line":8,"column":3,"nodeType":"118","messageId":"119","endLine":8,"endColumn":11},{"ruleId":"116","severity":1,"message":"157","line":10,"column":14,"nodeType":"118","messageId":"119","endLine":10,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":36,"column":6,"nodeType":"160","endLine":36,"endColumn":8,"suggestions":"161"},{"ruleId":"116","severity":1,"message":"140","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":18},{"ruleId":"116","severity":1,"message":"141","line":11,"column":13,"nodeType":"118","messageId":"119","endLine":11,"endColumn":17},{"ruleId":"116","severity":1,"message":"142","line":11,"column":29,"nodeType":"118","messageId":"119","endLine":11,"endColumn":35},{"ruleId":"116","severity":1,"message":"162","line":2,"column":31,"nodeType":"118","messageId":"119","endLine":2,"endColumn":39},{"ruleId":"116","severity":1,"message":"163","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":15},{"ruleId":"116","severity":1,"message":"164","line":10,"column":10,"nodeType":"118","messageId":"119","endLine":10,"endColumn":19},{"ruleId":"116","severity":1,"message":"165","line":14,"column":10,"nodeType":"118","messageId":"119","endLine":14,"endColumn":16},{"ruleId":"158","severity":1,"message":"166","line":34,"column":6,"nodeType":"160","endLine":34,"endColumn":8,"suggestions":"167"},{"ruleId":"143","severity":1,"message":"144","line":3,"column":1,"nodeType":"145","endLine":24,"endColumn":3},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'LogInBro' is defined but never used.","'Form' is defined but never used.","'faUser' is defined but never used.","'faSeedling' is defined but never used.","'faHatWizard' is defined but never used.","'faHamburger' is defined but never used.","'faGhost' is defined but never used.","'faCouch' is defined but never used.","'faDrumstickBite' is defined but never used.","'faDove' is defined but never used.","'faBomb' is defined but never used.","'faAppleAlt' is defined but never used.","'faUserInjured' is defined but never used.","'faUserNinja' is defined but never used.","'faHippo' is defined but never used.","'faBreadSlice' is defined but never used.","'faBug' is defined but never used.","'faPoo' is defined but never used.","'faFrog' is defined but never used.","'faUserTie' is defined but never used.","'FooterPage' is defined but never used.","'user' is assigned a value but never used.","'logout' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'Label' is defined but never used.","'Link' is defined but never used.","'follow' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'snipList' is assigned a value but never used.","'setSnipList' is assigned a value but never used.","'FormText' is defined but never used.","'CardSubtitle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'errorMessage'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'Collapse' is defined but never used.","'codeAPI' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [errorMessage]",{"range":"176","text":"177"},"Update the dependencies array to be: [isLoggedIn]",{"range":"178","text":"179"},[1240,1242],"[errorMessage]",[983,985],"[isLoggedIn]"]